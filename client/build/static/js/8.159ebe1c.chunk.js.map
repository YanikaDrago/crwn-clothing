{"version":3,"sources":["pages/shop/Shop.component.jsx"],"names":["CollectionsOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","match","useEffect","className","fallback","exact","path","component"],"mappings":"sHAAA,yDAWMA,EAA+BC,gBAAK,kBAAM,iCAC1CC,EAA0BD,gBAAK,kBAAM,iCA6B5BE,sBAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCC,sBAAuB,kBAAMD,EAASC,mBAGzBF,EA3BE,SAAC,GAAoC,IAAnCE,EAAkC,EAAlCA,sBAAuBC,EAAW,EAAXA,MAMxC,OAJAC,qBAAU,WACRF,MACC,CAACA,IAGF,qBAAKG,UAAU,YAAf,SACE,eAAC,WAAD,CAAUC,SAAU,cAAC,IAAD,IAApB,UACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAI,UAAKL,EAAMK,MACjBC,UAAWZ,IAEX,cAAC,IAAD,CACEW,KAAI,UAAKL,EAAMK,KAAX,kBACJC,UAAWV","file":"static/js/8.159ebe1c.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Spinner from '../../components/spinner/spinner.component';\r\n\r\n// import CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\r\n// import CollectionPageContainer from '../collection/collection.container';\r\n\r\nimport { fetchCollectionsStart } from '../../redux/shop/shop.actions';\r\n\r\nconst CollectionsOverviewContainer = lazy(() => import('../../components/collections-overview/collections-overview.container'));\r\nconst CollectionPageContainer = lazy(() => import('../collection/collection.container'));\r\n\r\nconst ShopPage = ({fetchCollectionsStart, match}) => {\r\n \r\n  useEffect(() => {\r\n    fetchCollectionsStart()\r\n  }, [fetchCollectionsStart]); //чтобы не вызывался еще раз при обновлении user в App.js \r\n\r\n  return (\r\n    <div className='shop-page'>\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route \r\n          exact \r\n          path={`${match.path}`} \r\n        component={CollectionsOverviewContainer}     \r\n        />\r\n        <Route \r\n          path={`${match.path}/:collectionId`} \r\n          component={CollectionPageContainer}\r\n          />\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"],"sourceRoot":""}