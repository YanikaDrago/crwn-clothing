{"version":3,"sources":["components/checkout-item/checkout-item.styles.jsx","components/checkout-item/Checkout-item.Component.js","components/stripe-button/Stripe-button.component.jsx","pages/checkout/checkout.styles.jsx","pages/checkout/Checkout.component.jsx"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","className","StripeCheckoutButton","priceForStripe","label","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","WarningContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","id"],"mappings":"kMAEaA,EAAwBC,IAAOC,IAAV,+PAarBC,EAAiBF,IAAOC,IAAV,sHASdE,EAAgBH,IAAOI,KAAV,2GAObC,EAAoBL,YAAOG,EAAPH,CAAH,sHAUjBM,EAAwBN,IAAOC,IAAV,uE,OCFnBM,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG7BH,EA1BM,SAAC,GAAiD,IAA/CO,EAA8C,EAA9CA,SAAUL,EAAoC,EAApCA,UAAWG,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAC1CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACA,eAACnB,EAAD,WACI,cAACG,EAAD,UACI,qBAAKiB,IAAKH,EAAUI,IAAI,WAE5B,cAACjB,EAAD,UAAgBY,IAChB,eAACV,EAAD,WACI,qBAAKgB,QAAS,kBAAMR,EAAWC,IAA/B,sBACA,sBAAMQ,UAAU,QAAhB,SAAyBJ,IACzB,qBAAKI,UAAU,QAAQD,QAAS,kBAAMT,EAAQE,IAA9C,yBAEJ,cAACX,EAAD,UAAgBc,IAChB,cAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,IAAhD,0B,kCCiBSS,EAxCY,SAAC,GAAe,IAAbN,EAAY,EAAZA,MACtBO,EAAyB,IAARP,EAuBvB,OACE,cAAC,IAAD,CACEQ,MAAM,UACNV,KAAK,sBACLW,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBZ,GAC/Ba,OAAQN,EACRO,WAAW,UACXC,MA9BY,SAACA,GACfC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJN,OAAQN,EACRQ,MAAOA,KAGRK,MAAK,SAACC,GACLC,MAAM,wBAEPC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,gGAgBJK,UAjCmB,iH,QCJdC,EAAwB7C,IAAOC,IAAV,6RAgBrB6C,EAA0B9C,IAAOC,IAAV,wJAQvB8C,EAAuB/C,IAAOC,IAAV,+NAcpB+C,EAAiBhD,IAAOC,IAAV,2FAMdgD,EAAmBjD,IAAOC,IAAV,2GCGrBiD,EAAkBC,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,MAGMhD,sBAAQ2C,EAAR3C,EArCM,SAAC,GAAD,IAAG6C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,eAACT,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UACE,6CAEF,cAACA,EAAD,UACE,iDAEF,cAACA,EAAD,UACE,8CAEF,cAACA,EAAD,UACE,2CAEF,cAACA,EAAD,UACE,+CAGHK,EAAUI,KAAI,SAAA1C,GAAQ,OACrB,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS2C,OAE9B,eAACT,EAAD,sBAAyBM,KACzB,eAACL,EAAD,sEAEE,uBAFF,iDAKA,cAAC,EAAD,CAAsBhC,MAAOqC","file":"static/js/6.a5c921a0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CheckoutItemContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  min-height: 100px;\r\n  border-bottom: 1px solid darkgrey;\r\n  padding: 15px 0;\r\n  font-size: 20px;\r\n  align-items: center;\r\n  @media screen and (max-width: 800px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 23%;\r\n  padding-right: 15px;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const TextContainer = styled.span`\r\n  width: 23%;\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n  }\r\n`;\r\n\r\nexport const QuantityContainer = styled(TextContainer)`\r\n  display: flex;\r\n  span {\r\n    margin: 0 10px;\r\n  }\r\n  div {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const RemoveButtonContainer = styled.div`\r\n  padding-left: 12px;\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {clearItemFromCart, addItem, removeItem} from '../../redux/cart/cart.actions';\r\n\r\nimport {\r\n    CheckoutItemContainer,\r\n    ImageContainer,\r\n    TextContainer,\r\n    QuantityContainer,\r\n    RemoveButtonContainer\r\n  } from './checkout-item.styles';\r\n\r\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) =>{ \r\n    const { name, imageUrl, price, quantity } = cartItem;\r\n    return (\r\n    <CheckoutItemContainer>\r\n        <ImageContainer>\r\n            <img src={imageUrl} alt='item' />\r\n        </ImageContainer>\r\n        <TextContainer>{name}</TextContainer>\r\n        <QuantityContainer>\r\n            <div onClick={() => removeItem(cartItem)}> &#10094; </div>\r\n            <span className='value'>{quantity}</span>\r\n            <div className='arrow' onClick={() => addItem(cartItem)}> &#10095; </div>\r\n        </QuantityContainer>\r\n        <TextContainer>{price}</TextContainer>\r\n        <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\r\n            &#10005;\r\n        </RemoveButtonContainer>\r\n    </CheckoutItemContainer>\r\n    )};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    clearItem: item => dispatch(clearItemFromCart(item)),\r\n    addItem: item => dispatch(addItem(item)),\r\n    removeItem: item => dispatch(removeItem(item))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import React from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\n\r\nconst StripeCheckoutButton = ({ price }) => {\r\n    const priceForStripe = price * 100;\r\n    const publishableKey = \"pk_test_51IyeqjC4mkV5ouV4PlyDJ5AVxK6IOgXZ8BNmX4UpUv7T3pIXsvlJWgNmbS4jT8YE2ER7pxBVjv6yVtk5TCVY6qFo009fkza6l2\";\r\n  \r\n    const onToken = (token) => {\r\n      axios({\r\n        url: \"payment\",\r\n        method: \"post\",\r\n        data: {\r\n          amount: priceForStripe,\r\n          token: token,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          alert(\"succesful payment\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Payment Error: \", error);\r\n          alert(\r\n            \"There was an issue with your payment! Please make sure you use the provided credit card.\"\r\n          );\r\n        });\r\n    };\r\n  \r\n    return (\r\n      <StripeCheckout\r\n        label=\"Pay Now\"\r\n        name=\"Crown Clothing Ltd.\"\r\n        billingAddress\r\n        shippingAddress\r\n        image=\"https://svgshare.com/i/CUz.svg\"\r\n        description={`Your total is $${price}`}\r\n        amount={priceForStripe}\r\n        panelLabel=\"Pay Now\"\r\n        token={onToken}\r\n        stripeKey={publishableKey}\r\n      />\r\n    );\r\n  };\r\n  \r\n  export default StripeCheckoutButton;","import styled from 'styled-components';\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 22%;\r\n    &:last-child {\r\n      width: 12%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport CheckoutItem from '../../components/checkout-item/Checkout-item.Component';\r\nimport StripeCheckoutButton from '../../components/stripe-button/Stripe-button.component';\r\n\r\nimport {selectCartItems, selectCartTotal} from '../../redux/cart/cart.selectors';\r\n\r\nimport {\r\n    CheckoutPageContainer,\r\n    CheckoutHeaderContainer,\r\n    HeaderBlockContainer,\r\n    TotalContainer,\r\n    WarningContainer\r\n  } from './checkout.styles';\r\n  \r\n  const CheckoutPage = ({ cartItems, total }) => (\r\n    <CheckoutPageContainer>\r\n      <CheckoutHeaderContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Product</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Description</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Quantity</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Price</span>\r\n        </HeaderBlockContainer>\r\n        <HeaderBlockContainer>\r\n          <span>Remove</span>\r\n        </HeaderBlockContainer>\r\n      </CheckoutHeaderContainer>\r\n      {cartItems.map(cartItem => (\r\n        <CheckoutItem key={cartItem.id} cartItem={cartItem} />\r\n      ))}\r\n      <TotalContainer>TOTAL: ${total}</TotalContainer>\r\n      <WarningContainer>\r\n        *Please use the following test credit card for payments*\r\n        <br />\r\n        4242 4242 4242 4242 - Exp: 01/23 - CVV: 123\r\n      </WarningContainer>\r\n      <StripeCheckoutButton price={total} />\r\n    </CheckoutPageContainer>\r\n  );\r\n  \r\n  const mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems,\r\n    total: selectCartTotal\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}